name: Kubernetes

on:
  workflow_call:

jobs:

  EKS:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: configurando credenciais da AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - run: git clone https://github.com/leollo98/Infra_CI_Kubernetes
    
    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      
    - run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog init 
    
    - run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog destroy -auto-approve
      continue-on-error: true
      
    #- run: return 1
      
    - run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog apply -auto-approve
    
    - run: echo "$(terraform -chdir=Infra_CI_Kubernetes/env/Homolog output -raw IP_alb)"
      id: URL
    
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v3
      
    - run: aws sts get-caller-identity
    
    - run: aws eks update-kubeconfig --region us-west-2 --name homolog2
    
    - run: kubectl delete secret dbuser --ignore-not-found
    - run: kubectl create secret generic dbuser --from-literal=USER=${{ secrets.DBUSER }}
    - run: kubectl delete secret dbpassword --ignore-not-found
    - run: kubectl create secret generic dbpassword --from-literal=PASSWORD=${{ secrets.DBPASSWORD }}
    - run: kubectl delete secret dbname --ignore-not-found
    - run: kubectl create secret generic dbname --from-literal=DBNAME=${{ secrets.DBNAME }}
    - run: kubectl delete secret dbhost --ignore-not-found
    - run: kubectl create secret generic dbhost --from-literal=HOST=${{ steps.URL.outputs.stdout }}
    - run: kubectl delete secret dbport --ignore-not-found
    - run: kubectl create secret generic dbport --from-literal=PORT=${{ secrets.DBPORT }}
    
    - run: kubectl apply -f Infra_CI_Kubernetes/go.yaml
